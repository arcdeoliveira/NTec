// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NTec.Infra.Contexto;

#nullable disable

namespace NTec.Infra.Migrations
{
    [DbContext(typeof(DataContexto))]
    [Migration("20221231040629_NTec_Migration")]
    partial class NTecMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NTec.Domain.Entidades.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlteradoPor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("DataDeAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 12, 31, 1, 6, 28, 882, DateTimeKind.Local).AddTicks(3583));

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ExcluidoPor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("cargos", (string)null);
                });

            modelBuilder.Entity("NTec.Domain.Entidades.Colaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<string>("AlteradoPor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("Aniversario")
                        .HasColumnType("date");

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ChefeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("bigint")
                        .HasColumnOrder(2)
                        .IsFixedLength();

                    b.Property<DateTime?>("DataDeAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("DataDeCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 12, 31, 1, 6, 28, 882, DateTimeKind.Local).AddTicks(5445));

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(4);

                    b.Property<string>("ExcluidoPor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(5);

                    b.Property<string>("Foto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Genero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(3);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SetorId")
                        .HasColumnType("int");

                    b.Property<string>("SobreNome")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("ChefeId");

                    b.HasIndex("SetorId");

                    b.ToTable("colaboradores", (string)null);
                });

            modelBuilder.Entity("NTec.Domain.Entidades.Setor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlteradoPor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("DataDeAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 12, 31, 1, 6, 28, 883, DateTimeKind.Local).AddTicks(673));

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ExcluidoPor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("setores", (string)null);
                });

            modelBuilder.Entity("NTec.Domain.Entidades.Colaborador", b =>
                {
                    b.HasOne("NTec.Domain.Entidades.Cargo", "Cargo")
                        .WithMany("Colaboradores")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NTec.Domain.Entidades.Colaborador", "Chefe")
                        .WithMany("Subordinados")
                        .HasForeignKey("ChefeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NTec.Domain.Entidades.Setor", "Setor")
                        .WithMany("Colaboradores")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Chefe");

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("NTec.Domain.Entidades.Cargo", b =>
                {
                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("NTec.Domain.Entidades.Colaborador", b =>
                {
                    b.Navigation("Subordinados");
                });

            modelBuilder.Entity("NTec.Domain.Entidades.Setor", b =>
                {
                    b.Navigation("Colaboradores");
                });
#pragma warning restore 612, 618
        }
    }
}
